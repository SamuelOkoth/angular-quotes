{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/date-count.pipe.ts","webpack:///./src/app/highlight.directive.ts","webpack:///./src/app/quote-details/quote-details.component.css","webpack:///./src/app/quote-details/quote-details.component.html","webpack:///./src/app/quote-details/quote-details.component.ts","webpack:///./src/app/quote-form/quote-form.component.css","webpack:///./src/app/quote-form/quote-form.component.html","webpack:///./src/app/quote-form/quote-form.component.ts","webpack:///./src/app/quote.ts","webpack:///./src/app/quote/quote.component.css","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n\\n  <app-quote></app-quote>\\n\"","import { Component } from '@angular/core';\nimport {Quote} from './quote'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteDetailsComponent } from './quote-details/quote-details.component';\nimport { HighlightDirective } from './highlight.directive';\nimport { DateCountPipe } from './date-count.pipe';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteDetailsComponent,\n    HighlightDirective,\n    DateCountPipe,\n    QuoteFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateCount'\n})\nexport class DateCountPipe implements PipeTransform {\n\n  transform(value: any): number {\n    let today:Date = new Date(); //get current date and time\n    let todayWithNoTime:any = new Date(today.getFullYear(),today.getMonth(),today.getDate())\n    var dateDifference =Math.abs(value-todayWithNoTime )// returns value in milliseconds\n    const secondsInADay= 86400; //60 seconds*60 minutes in an hour *24 hours\n\n    var dateDifferenceSeconds=dateDifference*0.001; //converts to seconds\n\n    var dateCounter = dateDifferenceSeconds/secondsInADay;\n\n    if (dateCounter >= 1){\n        return dateCounter;\n    }else{\n        return 0;\n    }\n  }\n\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n\n  constructor(private elem: ElementRef) {\n    console.log(elem)\n    this.elem.nativeElement.style.boxShadow='1px 100px 20px 10px red';\n  }\n\n\n}\n","module.exports = \".row{\\n    display: inline;\\n}\"","module.exports = \"\\n<div class=\\\"jumbotron\\\">\\n\\n    \\n        <p>Author : {{quote.author}}</p>\\n        <p> submitted by {{quote.publisher}} {{quote.date |dateCount}} days ago</p>\\n\\n\\n        <!-- <div class=\\\"row\\\">\\n        <button  class=\\\"btn btn-info btn-lg\\\"  (click)=submitLike(quote)>\\n        <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span> likes</button>  <p>{{quote.likes}}</p>\\n\\n\\n        </div> -->\\n\\n\\n        <!-- <div class=\\\"row\\\">\\n                <button  class=\\\"btn btn-info btn-lg\\\"  (click)=submitUnlike(quote)>\\n                <span class=\\\"glyphicon glyphicon-thumbs-down\\\">\\n\\n                </span> dislikes</button> <p>{{quote.dislikes}}</p>\\n                </div> -->\\n        <button class=\\\"btn btn-danger\\\" (click) = 'quoteComplete(true)'> Delete </button>\\n\\n        \\n</div>\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\nimport {Quote} from '../quote'\n\n@Component({\n  selector: 'app-quote-details',\n  templateUrl: './quote-details.component.html',\n  styleUrls: ['./quote-details.component.css']\n})\nexport class QuoteDetailsComponent implements OnInit {\n\n  @Input() quote:Quote;\n  @Output() isComplete= new EventEmitter<boolean>();\n\n\n  // submitLike(quote){\n  //   quote.likes=quote.likes+1\n  // }\n\n\n  // submitUnlike(quote){\n  //   quote.dislikes= quote.dislikes+1\n  // }\n\n\n\n  quoteComplete(complete:boolean){\n    this.isComplete.emit(complete);\n  }\n\n\n\n  constructor() { }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"textarea {\\n    border: 4px solid #888; \\n  }\\n\\n\\n\\n  input {\\n    /* width: 100%; */\\n    padding: 12px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n    margin-top: 6px;\\n    margin-bottom: 16px;\\n}\\n\\n\\n\\n  input[type=submit] {\\n    background-color: #056b5b;\\n    color: white;\\n    text-align: center;\\n    /* width: 50%; */\\n}\\n\\n\\n\\n  button {\\n    background-color: #056b5b;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    /* width: 100%; */\\n    opacity: 0.9;\\n}\\n\\n\\n\\n  form {\\n    background-color: #f1f1f1;\\n    padding: 20px;\\n    width: 100vh;\\n    /* height: 100%; */\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n            <form (ngSubmit)='submitQuote() '#quoteForm = 'ngForm'>\\n                \\n                <label for=\\\"name\\\">Author</label>\\n                <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"author\\\" [(ngModel)]='newQuote.author' name=\\\"author\\\">\\n\\n                <label for=\\\"name\\\">Your name</label>\\n                <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"publisher\\\" [(ngModel)]= 'newQuote.publisher' name=\\\"publisher\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"quoteDesc\\\">Quote</label>\\n                <textarea class=\\\"form-control\\\" id=\\\"quoteDesc\\\" rows=\\\"4\\\" required [(ngModel)]='newQuote.quoteDesc' name=\\\"quoteDesc\\\"></textarea>\\n                \\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"complete\\\">Date</label>\\n                <input type='date' id=\\\"complete\\\" required>\\n                \\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">Submit new Quote</button>\\n            </form>\\n    </div>\\n\\n</div>\\n\"","import { Component, OnInit,Output,EventEmitter } from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\n\n\nexport class QuoteFormComponent implements OnInit {\n  newQuote= new Quote(0,'','','',new Date(),0,0);\n  @Output() addQuote=new EventEmitter<Quote>();\n \n    \n  submitQuote(){\n      this.addQuote.emit(this.newQuote);\n      this.newQuote = new Quote(0,'','','',new Date,0,0) \n  }\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Quote {\n    public showDetails:boolean;\n    constructor(public id:number, public author:string,public publisher:string,public quoteDesc:string,public date:Date,public likes:number,public dislikes:number){\n    this.showDetails=false\n    \n}\n\n// like(){\n//     this.likes++;\n// }\n\n\ndislike(){\n    this.dislikes++;\n}\n\n\n\n}\n\n\n","module.exports = \"li{\\n    font-family: 'Courier New', Courier, monospace;\\n    font-style: italic;\\n    \\n}\\n\\n.container{\\n    background: white;\\n}\\n\\nh1{\\n    color:#056b5b;\\n}\\n\\n.jumbotron{\\n    padding-left: 0;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div style=\\\"text-align:center\\\">\\n        <h1>\\n          {{ title }}\\n        </h1>\\n        </div>\\n        <div class=\\\"jumbotron\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <app-quote-form (addQuote)=\\\"addNewQuote($event)\\\"></app-quote-form>\\n            </div>\\n        \\n        <div class=\\\"col-md-6\\\">\\n          <h1>Quotes</h1>\\n            <ul>\\n\\n\\n                <div *ngFor = \\\"let quote of quotes; let i = 'index'\\\" style=\\\"list-style: none\\\"><br>\\n                  <div id=\\\"{{i}}\\\" appHighlight *ngIf=\\\"quote.likes===maxCount && quote.likes>0\\\"></div>\\n                  <li style=\\\"color:#056b5b;\\\">\\\"{{quote.quoteDesc}}\\\"</li><br><br>\\n                    <button  class=\\\"btn btn-info btn-lg\\\"  (click)=\\\"submitLike(quote)\\\">\\n                    <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span> Upvotes</button> <br><br> <p style=\\\"text-align:center\\\">{{quote.likes}}</p>\\n                    <button  class=\\\"btn btn-info btn-lg\\\"  (click)=submitUnlike(quote)>\\n                    <span class=\\\"glyphicon glyphicon-thumbs-down\\\"></span> Downvotes</button><br><br> <p style=\\\"text-align: center\\\">{{quote.dislikes}}</p>\\n                    <br>\\n                    <br>\\n                  <button class=\\\"btn btn-primary\\\"  (click)='toogleDetails(i)'>Details</button><br>\\n                <app-quote-details *ngIf=\\\"quote.showDetails\\\" [quote]='quote' (isComplete)= 'completeQuote($event,i)'></app-quote-details>\\n                </div>\\n                </ul>\\n\\n                <!-- <div class=\\\"col-md-4 content\\\" *ngFor=\\\"let quoteID of addNewQuote; let i = index\\\">\\n                    <div id=\\\"{{i}}\\\" appHighlight *ngIf=\\\"quoteID.vote===maxCount && quoteID.likes>0\\\">\\n                    </div> -->\\n            \\n        </div>\\n        </div>\\n        </div>\\n\\n</div>\\n\\n  \\n  \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport {Quote} from '../quote'\n\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n  public maxCount =0;\n  title = \"QUOTES BY ANGULAR\"\n  quotes =[\n    new Quote(1, 'Mandera','Liz','Twenty years from now you will be more disappointed by the things that you didn’t do than by the ones you did do'\n    ,new Date(2018,5,25,) ,0,0),\n    new Quote(1, '','Liz','Two things are infinite: the universe and human stupidity; and Im not sure about the universe'\n    ,new Date(2018,5,25,) ,0,0),\n\n  ];\n\n\n\n  submitLike(quote,index){\n    quote.likes=quote.likes+1;\n    // this.addNewQ(quote);\n    if(quote.likes>this.maxCount) this.maxCount=quote.likes;\n    else if(quote.likes<=this.maxCount) console.log(this.maxCount);\n  }\n\n\n\n\n  submitUnlike(quote){\n    quote.dislikes= quote.dislikes+1\n  }\n\n\n\n  addNewQuote(quote){\n    let quoteLength = this.quotes.length;\n    quote.id = quoteLength+1;\n    quote.completeDate = new Date(quote.completeDate)\n    this.quotes.push(quote);\n  }\n\n  completeQuote(isComplete,index){\n    if(isComplete){\n      let toComplete = confirm('Are you sure you want to delete?')\n      if(toComplete){\n        this.quotes.splice(index,1)\n      }\n    }\n  }\n\n\n\n  toogleDetails(index){\n    this.quotes[index].showDetails = !this.quotes[index].showDetails;\n}\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}